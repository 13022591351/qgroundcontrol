name: MacOS Build

on:
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - 'android/**'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'android/**'

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        BuildType: [Debug, Release]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink:   true
          key:              ${{ runner.os }}-${{ matrix.BuildType }}
          restore-keys:     ${{ runner.os }}-${{ matrix.BuildType }}          
          max-size:         2G
          append-timestamp: false

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      6.6.3
          aqtversion:   ==3.1.*
          host:         mac
          target:       desktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d qt5compat
          setup-python: false
          cache:        true

      - name: Install Dependencies
        run: |
          brew update
          brew install ninja

      - name: Install Gstreamer
        run: |
            wget https://gstreamer.freedesktop.org/data/pkg/osx/1.18.6/gstreamer-1.0-devel-1.18.6-x86_64.pkg
            wget https://gstreamer.freedesktop.org/data/pkg/osx/1.18.6/gstreamer-1.0-1.18.6-x86_64.pkg
            for package in *.pkg ;
              do sudo installer -verbose -pkg "$package" -target /
            done
  
      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake -S ${{ github.workspace }} -B . -G Ninja \
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} \
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Create DMG
        working-directory:  ${{ runner.temp }}/shadow_build_dir
        run:                cmake --install .

      - name: Upload Build File
        uses: ./.github/actions/upload
        if: matrix.BuildType == 'Release'
        with:
          artifact_name: QGroundControl.dmg
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
